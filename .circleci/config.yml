version: 2.1
description: |
    Orb for working with Android projects on CircleCI.
    Supports running Android emulator UI tests.
display:
    source_url: https://github.com/circleci-public/android-orb
commands:
    accept-licenses:
        description: |
            Accept all Android SDK Manager licenses
        steps:
            - run:
                command: |
                    yes | sdkmanager --licenses
                    yes | sdkmanager --update
                description: |
                    Accepts all Android SDK licenses. This command is typically not necessary to execute, since the CircleCI machine/convenience images ship with all licenses accepted. This command will add approximately 10 seconds to the build time.
                name: Accept Android Licenses
                shell: /bin/bash -e
    change-java-version:
        description: |
            Change default java version from OpenJDK v11.
        parameters:
            java-version:
                default: 8
                description: |
                    The version of OpenJDK to change to
                type: integer
        steps:
            - run:
                command: |-
                    #!/bin/bash
                     CURRENT_JAVA_VER="$( java -version 2>&1 | head -1 | cut -d'"' -f2 | sed '/^1\./s///' | cut -d'.' -f1 )"
                            CURRENT_JAVAC_VER="$( javac -version 2>&1 | head -1 | cut -f 2- -d ' ' | sed '/^1\./s///' | cut -d'.' -f1 )"
                            echo "Current Java Version: $CURRENT_JAVA_VER"
                            echo "Current Java Compiler Version : $CURRENT_JAVAC_VER"
                            if [ "$CURRENT_JAVA_VER" -ne "${PARAM_JAVA_VER}" ]; then
                              if [ "${PARAM_JAVA_VER}" -eq 8 ] || [ "${PARAM_JAVA_VER}" -eq 11 ]; then
                                if [ "${PARAM_JAVA_VER}" -eq 8 ]; then
                                  sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
                                else
                                  sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
                                fi
                                sudo update-alternatives --set javac /usr/lib/jvm/java-"${PARAM_JAVA_VER}"-openjdk-amd64/bin/javac
                              else
                                sudo apt install openjdk-"${PARAM_JAVA_VER}"-jdk
                              fi
                              echo "export JAVA_HOME=/usr/lib/jvm/java-${PARAM_JAVA_VER}-openjdk-amd64" >>~/.bashrc
                              echo "export PATH=$JAVA_HOME/bin:$PATH" >>~/.bashrc
                            fi
                            NEW_JAVA_VER="$( java -version 2>&1 | head -1 | cut -d'"' -f2 | sed '/^1\./s///' | cut -d'.' -f1 )"
                            NEW_JAVAC_VER="$( javac -version 2>&1 | head -1 | cut -f 2- -d ' ' | sed '/^1\./s///' | cut -d'.' -f1 )"
                            echo "New Java Version : $NEW_JAVA_VER"
                            echo "New Java Compiler Version : $NEW_JAVAC_VER"
                environment:
                    PARAM_JAVA_VER: << parameters.java-version >>
                name: Change OpenJDK version
    create-avd:
        description: |
            Create an AVD.
        parameters:
            additional-args:
                default: ""
                description: |
                    Additional args to be passed directly to the avd creation command
                type: string
            avd-name:
                description: |
                    The name of the AVD to create
                type: string
            background:
                default: false
                description: |
                    Whether to run the creation command in background
                type: boolean
            install:
                description: |
                    Whether to first install the system image via sdkmanager
                type: boolean
            system-image:
                description: |
                    Name of system image e.g. "system-images;android-29;default;x86".
                    It should match the name seen in the "sdkmanager --list" output.
                type: string
        steps:
            - run:
                background: << parameters.background >>
                command: |
                    #!/bin/bash

                    if [ "${PARAM_INSTALL}" == 1 ]; then
                        sdkmanager "${PARAM_SYSTEM_IMAGE}"
                    fi

                    echo "no" | avdmanager --verbose create avd -n ${PARAM_AVD_NAME} -k ${PARAM_SYSTEM_IMAGE} ${PARAM_ADDITIONAL_ARGS}
                environment:
                    PARAM_ADDITIONAL_ARGS: << parameters.additional-args >>
                    PARAM_AVD_NAME: << parameters.avd-name >>
                    PARAM_INSTALL: << parameters.install >>
                    PARAM_SYSTEM_IMAGE: << parameters.system-image >>
                name: Create avd "<< parameters.avd-name >>"
    create-google-play-key:
        description: |
            Generate JSON file for your google play key. For use with environment variables.
        parameters:
            google-play-key:
                default: GOOGLE_PLAY_KEY
                description: Your google play key
                type: env_var_name
            working-directory:
                default: .
                description: Working directory to create google play key in
                type: string
        steps:
            - run:
                command: echo << parameters.google-play-key >> > google-play-key.json
                name: Create Google Play key
                working_directory: << parameters.working-directory >>
    create-keystore-properties:
        description: |
            Creates a keystore.properties file for use in deployment steps. For use with environment variables.
        parameters:
            release-key-alias:
                default: RELEASE_KEY_ALIAS
                description: Release key alias
                type: env_var_name
            release-key-password:
                default: RELEASE_KEY_PASSWORD
                description: Password for your release key
                type: env_var_name
            release-keystore:
                default: ./keystore
                description: Points to the location of your decrypted keystore
                type: string
            release-store-password:
                default: RELEASE_STORE_PASSWORD
                description: Password for your keystore
                type: env_var_name
            working-directory:
                default: .
                description: Working directory to create keystore.properties in
                type: string
        steps:
            - run:
                command: |-
                    #!/bin/bash

                    # RELEASE_KEY_ALIAS=$(eval echo "\$$PARAM_RELEASE_KEY_ALIAS")
                    # RELEASE_KEY_PASSWORD=$(eval echo "\$$PARAM_RELEASE_KEY_PASSWORD")
                    # RELEASE_STORE_PASSWORD=$(eval echo "\$$PARAM_RELEASE_STORE_PASSWORD")

                    RELEASE_KEY_ALIAS="${!PARAM_RELEASE_KEY_ALIAS}"
                    RELEASE_KEY_PASSWORD="${!PARAM_RELEASE_KEY_PASSWORD}"
                    RELEASE_STORE_PASSWORD="${!PARAM_RELEASE_STORE_PASSWORD}"

                    printf 'releaseKeyAlias=%s\nreleaseKeyPassword=%s\nreleaseKeyStore=%s\nreleaseStorePassword=%s' \
                                "$RELEASE_KEY_ALIAS" "$RELEASE_KEY_PASSWORD" "${PARAM_RELEASE_KEYSTORE}" "$RELEASE_STORE_PASSWORD" > keystore.properties
                environment:
                    PARAM_RELEASE_KEY_ALIAS: << parameters.release-key-alias >>
                    PARAM_RELEASE_KEY_PASSWORD: << parameters.release-key-password >>
                    PARAM_RELEASE_KEYSTORE: << parameters.release-keystore >>
                    PARAM_RELEASE_STORE_PASSWORD: << parameters.release-store-password >>
                name: Create keystore.properties
                working_directory: << parameters.working-directory >>
    decode-keystore:
        description: |
            Decodes a keystore that was encrypted in base64. For use with environment variables.
        parameters:
            base64-keystore:
                default: BASE64_KEYSTORE
                description: Your base64 keystore
                type: env_var_name
            keystore-location:
                default: .
                description: The location of your decrypted keystore
                type: string
        steps:
            - run:
                command: |
                    #!/bin/bash

                    PARAM_BASE64_KEYSTORE=$(eval echo "\$$PARAM_BASE64_KEYSTORE")

                    echo "$PARAM_BASE64_KEYSTORE" | base64 -di | tee keystore "${PARAM_KEYSTORE_LOCATION}" > /dev/null
                environment:
                    PARAM_BASE64_KEYSTORE: << parameters.base64-keystore >>
                    PARAM_KEYSTORE_LOCATION: << parameters.keystore-location >>
                name: Decode Keystore
    disable-animations:
        description: |
            Disables animations. Requires an emulator to be running.
        steps:
            - run:
                command: |-
                    #!/bin/bash
                    adb shell settings put global window_animation_scale 0.0
                    adb shell settings put global transition_animation_scale 0.0
                    adb shell settings put global animator_duration_scale 0.0
                name: Disable emulator animations
    fastlane-deploy:
        description: |
            Runs fastlane lanes to deploy to Google Play Store
        parameters:
            lane-name:
                default: deploy
                description: The name of the lane fastlane will execute
                type: string
            working-directory:
                default: .
                description: Working directory to run fastlane commands in
                type: string
        steps:
            - run:
                command: fastlane << parameters.lane-name >>
                name: Run fastlane
                working_directory: << parameters.working-directory >>
    install-ndk:
        description: |
            Install an Android NDK version using 'sdkmanager'. This command takes one
            parameter called 'ndk', which is the NDK version. If the version is already
            available, the step will still complete successfully.

            This command is designed to be used with the CircleCI Android Docker or
            machine images.

            Available NDK versions can be found here:
            https://github.com/android/compose-samples
        parameters:
            version:
                description: |
                    Version of the NDK to install. Available NDK versions can be found here:
                    https://github.com/android/compose-samples
                type: string
        steps:
            - run:
                command: |-
                    #!/bin/bash
                    echo y | sdkmanager "ndk;${PARAM_VER}"
                    android_ndk_home=""
                      if [[ -d "${HOME}/android-sdk/ndk/${PARAM_VER}" ]]; then
                        android_ndk_home="$HOME/android-sdk/ndk/${PARAM_VER}"
                      elif [[ -d "/opt/android/sdk/ndk/${PARAM_VER}" ]]; then
                        android_ndk_home="/opt/android/${PARAM_VER}"
                      else
                        echo "Android NDK did not install successfully"
                        exit 1
                      fi
                    echo "export ANDROID_NDK_HOME=$android_ndk_home" >> "$BASH_ENV"
                    echo "Android NDK was installed at \"$android_ndk_home\"."
                environment:
                    PARAM_VER: << parameters.version >>
                name: Install Android NDK
    kill-emulators:
        description: |
            Terminates any running emulator processes
        steps:
            - run:
                command: |-
                    #!/bin/bash
                    # shellcheck disable=SC2154
                    adb devices | grep emulator | cut -f1 | while read -r line; do adb -s $line emu kill; done
                name: Kill any running emulators
    restore-build-cache:
        description: |
            Restore the build cache. See `save_build_cache` for more information.
        parameters:
            cache-prefix:
                default: v1
                description: Used to form part of the cache key
                type: string
        steps:
            - restore_cache:
                key: android-orb-<<parameters.cache-prefix>>-
                name: Restore build cache
    restore-gradle-cache:
        description: |
            Restore gradle cache
        parameters:
            cache-prefix:
                default: v1
                description: Used to form part of the cache key
                type: string
            find-args:
                default: . -name "build.gradle*" -o -name "settings.gradle*"
                description: |
                    Use this to customize how the find command is used to look for relevant
                    file changes.
                type: string
        steps:
            - run:
                command: "#!/bin/bash\necho \"The following are the files used to generate the cache checksum:\"\neval find \"${PARAM_FIND_ARGS}\"\neval find \"${PARAM_FIND_ARGS}\" | sort | xargs cat |\nshasum | awk '{print $1}' > /tmp/gradle_cache_seed \n"
                environment:
                    PARAM_FIND_ARGS: << parameters.find-args >>
                name: Generate cache checksum
            - restore_cache:
                key: gradle-<< parameters.cache-prefix>>-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
                name: Restore gradle cache
    run-tests:
        description: |
            Runs tests, with retries supported
        parameters:
            max-tries:
                default: 2
                description: Max number of tries. To disable retries, set this to 1.
                type: integer
            no-output-timeout:
                default: 10m
                description: Use this to configure the no_output_timeout value
                type: string
            pre-test-command:
                default: ' '
                description: Command to run prior to runnning the test command
                type: string
            retry-interval:
                default: 5
                description: Duration in seconds to wait before the next try
                type: integer
            test-command:
                default: ./gradlew connectedDebugAndroidTest
                description: Command to run in order to run the tests
                type: string
            working-directory:
                default: .
                description: Working directory to run the tests in
                type: string
        steps:
            - run:
                command: |-
                    #!/bin/bash
                    run_with_retry() {
                                MAX_TRIES=${PARAM_MAX_TRIES}
                                n=1
                                until [ $n -gt $MAX_TRIES ]
                                do
                                  echo "Starting test attempt $n"
                                  ${PARAM_PRE_TEST_COMMAND}
                                  ${PARAM_TEST_COMMAND} && break
                                  n=$((n+1))
                                  sleep "${PARAM_RETRY_INTERVAL}"
                                done
                                if [ $n -gt $MAX_TRIES ]; then
                                  echo "Max tries reached (${PARAM_MAX_TRIES})"
                                  exit 1
                                fi
                            }
                            run_with_retry
                environment:
                    PARAM_MAX_TRIES: << parameters.max-tries >>
                    PARAM_PRE_TEST_COMMAND: << parameters.pre-test-command >>
                    PARAM_RETRY_INTERVAL: << parameters.retry-interval >>
                    PARAM_TEST_COMMAND: << parameters.test-command >>
                name: Run tests with max tries of <<parameters.max-tries>>
                working_directory: <<parameters.working-directory>>
    save-build-cache:
        description: |
            Save the Android build-cache. The build cache stores certain outputs that the Android plugin for Gradle generates when building your project (such as unpackaged AARs and pre-dexed remote dependencies). Your clean builds are much faster while using the cache because the build system can simply reuse those cached files during subsequent builds, instead of recreating them. The build cache also works on continuous integration servers and when running multiple build processes on a single local machine.
            See https://developer.android.com/studio/build/build-cache
        parameters:
            cache-prefix:
                default: v1
                description: Used to form part of the cache key
                type: string
        steps:
            - save_cache:
                key: android-orb-<<parameters.cache-prefix>>-{{ epoch }}
                name: Save build cache
                paths:
                    - ~/.android/build-cache
                    - ~/.android/cache
    save-gradle-cache:
        description: |
            Save gradle cache
        parameters:
            cache-prefix:
                default: v1
                description: Used to form part of the cache key
                type: string
        steps:
            - save_cache:
                key: gradle-<< parameters.cache-prefix>>-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
                name: Save gradle cache
                paths:
                    - ~/.gradle/caches
                    - ~/.gradle/wrapper
    start-emulator:
        description: |
            Start an emulator as a background process.
            The AVD used should already be created. (See "create-avd" command for how
            one could be created)
        parameters:
            additional-args:
                default: ""
                description: |
                    Additional args to be passed directly to the emulator command
                type: string
            avd-name:
                description: |
                    The name of the existing AVD to use for the emulator
                type: string
            camera-back:
                default: ""
                description: |
                    The value to use for the "-camera-back" flag.
                    If set to "", the emulator will be run without the -camera-back flag.
                type: string
            camera-front:
                default: ""
                description: |
                    The value to use for the "-camera-front" flag.
                    If set to "", the emulator will be run without the -camera-front flag.
                type: string
            delay-adb:
                default: false
                description: |
                    Whether to run the emulator with the -delay-adb flag
                type: boolean
            disable-animations:
                default: true
                description: |
                    Whether to disable animations that may interfere with tests, after the emulator starts up
                type: boolean
            gpu:
                default: swiftshader_indirect
                description: |
                    The value to use for the "-gpu" flag.
                    If set to "", the emulator will be run without the -gpu flag.
                type: string
            memory:
                default: -1
                description: |
                    The value to use for the "-memory" flag.
                    If set to -1, the emulator will be run without the -memory flag.
                type: integer
            no-audio:
                default: true
                description: |
                    Whether to run the emulator with the -noaudio flag
                type: boolean
            no-boot-anim:
                default: true
                description: |
                    Whether to run the emulator with the -no-boot-anim flag
                type: boolean
            no-snapshot:
                default: true
                description: |
                    Whether to run the emulator with the -no-snapshot flag
                type: boolean
            no-window:
                default: true
                description: |
                    Whether to run the emulator with the -no-window flag
                type: boolean
            override-args:
                default: ""
                description: |
                    If this is set to a non-blank value, the emulator command will be
                    run with the -avd flag and the value of "override-args" (i.e. none of the defaults
                    provided by the orb command will be used)
                type: string
            post-emulator-launch-assemble-command:
                default: ./gradlew assembleDebugAndroidTest
                description: |
                    If this is set to a non-blank value, the configured command will be run
                    after the emulator has been launched, and before commencing the
                    wait for the emulator to finish starting up.
                type: string
            post-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute after waiting for the emulator to start up
                type: steps
            pre-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute while before beginning to wait for the emulator to start up
                type: steps
            restore-gradle-cache-find-args:
                default: . -name "build.gradle*" -o -name "settings.gradle*"
                description: |
                    Use this to customize how the find command is used to look for relevant
                    file changes.
                type: string
            restore-gradle-cache-post-emulator-launch:
                default: true
                description: |
                    Whether to restore the gradle cache after the emulator has been launched,
                    and before commencing the wait for the emulator to finish starting up.
                type: boolean
            restore-gradle-cache-prefix:
                default: v1
                description: |
                    Cache prefix used if the "restore-gradle-cache-post-emulator-launch" parameter
                    is set to true.
                type: string
            run-logcat:
                default: false
                description: |
                    Whether to run with logcat in the background, after the emulator starts up
                type: boolean
            verbose:
                default: true
                description: |
                    Whether to run the emulator with the -verbose flag
                type: boolean
            wait-for-emulator:
                default: true
                description: |
                    Whether to wait for the emulator to start up
                type: boolean
        steps:
            - run:
                background: true
                command: |-
                    #!/bin/bash
                    if [ -n "${PARAM_OVERRIDE_ARGS}" ]; then
                              echo "override-args parameter was supplied; orb defaults will be overridden"
                              emulator -avd ${PARAM_AVD_NAME} ${PARAM_OVERRIDE_ARGS}
                            else
                              if [ "${PARAM_NO_WINDOW}" == "true" ]; then
                                set -- "$@" -no-window
                              fi
                              if [ "${PARAM_NO_AUDIO}" == "true" ]; then
                                set -- "$@" -no-audio
                              fi
                              if [ "${PARAM_NO_BOOT_ANIM}" == "true" ]; then
                                set -- "$@" -no-boot-anim
                              fi
                              if [ "${PARAM_VERBOSE}" == "true" ]; then
                                set -- "$@" -verbose
                              fi
                              if [ "${PARAM_NO_SNAPSHOT}" == "true" ]; then
                                set -- "$@" -no-snapshot
                              fi
                              if [ "${PARAM_DELAY_ABD}" == "true" ]; then
                                set -- "$@" -delay-adb
                              fi
                              if [ "${PARAM_MEMORY}" != "-1" ]; then
                                set -- "$@" -memory ${PARAM_MEMORY}
                              fi
                              if [ -n "${PARAM_GPU}" ]; then
                                set -- "$@" -gpu "${PARAM_GPU}"
                              fi
                              if [ -n "${PARAM_CAMERA_FRONT}" ]; then
                                set -- "$@" -camera-front "${PARAM_CAMERA_FRONT}"
                              fi
                              if [ -n "${PARAM_CAMERA_BACK}" ]; then
                                set -- "$@" -camera-back "${PARAM_CAMERA_BACK}"
                              fi
                              echo "Starting emulator with arguments $* ${PARAM_ADDITIONAL_ARGS}"
                              emulator -avd ${PARAM_AVD_NAME} "$@" ${PARAM_ADDITIONAL_ARGS}
                            fi
                environment:
                    PARAM_ADDITIONAL_ARGS: << parameters.additional-args >>
                    PARAM_AVD_NAME: << parameters.avd-name >>
                    PARAM_CAMERA_BACK: << parameters.camera-back >>
                    PARAM_CAMERA_FRONT: << parameters.camera-front >>
                    PARAM_DELAY_ABD: << parameters.delay-adb >>
                    PARAM_GPU: << parameters.gpu >>
                    PARAM_MEMORY: << parameters.memory >>
                    PARAM_NO_AUDIO: << parameters.no-audio >>
                    PARAM_NO_BOOT_ANIM: << parameters.no-boot-anim >>
                    PARAM_NO_SNAPSHOT: << parameters.no-snapshot >>
                    PARAM_NO_WINDOW: << parameters.no-window >>
                    PARAM_OVERRIDE_ARGS: << parameters.override-args >>
                    PARAM_VERBOSE: << parameters.verbose >>
                name: Start emulator
            - when:
                condition:
                    and:
                        - << parameters.restore-gradle-cache-post-emulator-launch >>
                        - equal:
                            - true
                            - << parameters.wait-for-emulator >>
                steps:
                    - restore-gradle-cache:
                        cache-prefix: << parameters.restore-gradle-cache-prefix >>
                        find-args: << parameters.restore-gradle-cache-find-args >>
            - when:
                condition:
                    and:
                        - << parameters.post-emulator-launch-assemble-command >>
                        - equal:
                            - true
                            - << parameters.wait-for-emulator >>
                steps:
                    - run:
                        command: |
                            # This is meant to do something useful in parallel with the emulator
                            # starting up, like assembling the app, which is required for UI tests
                            << parameters.post-emulator-launch-assemble-command >>
                        name: 'Run: << parameters.post-emulator-launch-assemble-command >>'
            - when:
                condition: << parameters.wait-for-emulator >>
                steps:
                    - << parameters.pre-emulator-wait-steps >>
            - when:
                condition: << parameters.wait-for-emulator >>
                steps:
                    - wait-for-emulator
                    - when:
                        condition: << parameters.run-logcat >>
                        steps:
                            - run:
                                background: true
                                command: |
                                    adb logcat
                                name: Logcat
                    - when:
                        condition: << parameters.disable-animations >>
                        steps:
                            - disable-animations
                    - << parameters.post-emulator-wait-steps >>
    start-emulator-and-run-tests:
        description: |
            Creates an AVD, starts an emulator and runs tests.
            This is a wrapper command that wraps the
            create-avd, start-emulator and run-tests commands.
        parameters:
            additional-avd-args:
                default: ""
                description: |
                    Additional args to be passed directly to the avd creation command
                type: string
            additional-emulator-args:
                default: ""
                description: |
                    Additional args to be passed directly to the emulator command
                type: string
            avd-name:
                default: test
                description: |
                    The name of the AVD to create
                type: string
            camera-back:
                default: ""
                description: |
                    The value to use for the "-camera-back" flag.
                    If set to "", the emulator will be run without the -camera-back flag.
                type: string
            camera-front:
                default: ""
                description: |
                    The value to use for the "-camera-front" flag.
                    If set to "", the emulator will be run without the -camera-front flag.
                type: string
            delay-adb:
                default: false
                description: |
                    Whether to run the emulator with the -delay-adb flag
                type: boolean
            disable-animations:
                default: true
                description: |
                    Whether to disable animations that may interfere with tests, after the emulator starts up
                type: boolean
            gpu:
                default: swiftshader_indirect
                description: |
                    The value to use for the "-gpu" flag.
                    If set to "", the emulator will be run without the -gpu flag.
                type: string
            install-system-image:
                default: true
                description: |
                    Whether to first install the system image via sdkmanager
                type: boolean
            kill-emulators:
                default: true
                description: |
                    Whether to kill the emulators after the tests complete
                type: boolean
            max-tries:
                default: 2
                description: Max number of tries. To disable retries, set this to 1.
                type: integer
            memory:
                default: -1
                description: |
                    The value to use for the "-memory" flag.
                    If set to -1, the emulator will be run without the -memory flag.
                type: integer
            no-audio:
                default: true
                description: |
                    Whether to run the emulator with the -noaudio flag
                type: boolean
            no-boot-anim:
                default: true
                description: |
                    Whether to run the emulator with the -no-boot-anim flag
                type: boolean
            no-output-timeout:
                default: 10m
                description: |
                    Use this to configure the no_output_timeout value of the test run
                type: string
            no-snapshot:
                default: true
                description: |
                    Whether to run the emulator with the -no-snapshot flag
                type: boolean
            no-window:
                default: true
                description: |
                    Whether to run the emulator with the -no-window flag
                type: boolean
            override-emulator-args:
                default: ""
                description: |
                    If this is set to a non-blank value, the emulator command will be
                    run with the -avd flag and the value of "override-args" (i.e. none of the defaults
                    provided by the orb command will be used)
                type: string
            post-emulator-launch-assemble-command:
                default: ./gradlew assembleDebugAndroidTest
                description: |
                    If this is set to a non-blank value, the configured command will be run
                    after the emulator has been launched, and before commencing the
                    wait for the emulator to finish starting up.
                type: string
            post-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute after waiting for the emulator to start up
                type: steps
            post-run-tests-steps:
                default: []
                description: |
                    Steps to run after the tests
                type: steps
            pre-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute while before beginning to wait for the emulator to start up
                type: steps
            pre-run-tests-steps:
                default: []
                description: |
                    Steps to run before the tests
                type: steps
            pre-test-command:
                default: ' '
                description: Command to run prior to runnning the test command
                type: string
            restore-gradle-cache-find-args:
                default: . -name "build.gradle*" -o -name "settings.gradle*"
                description: |
                    Use this to customize how the find command is used to look for relevant
                    file changes.
                type: string
            restore-gradle-cache-post-emulator-launch:
                default: true
                description: |
                    Whether to restore the gradle cache after the emulator has been launched,
                    and before commencing the wait for the emulator to finish starting up.
                type: boolean
            restore-gradle-cache-prefix:
                default: v1
                description: |
                    Cache prefix used if the "restore-gradle-cache-post-emulator-launch" parameter
                    is set to true.
                type: string
            retry-interval:
                default: 5
                description: Duration in seconds to wait before the next try
                type: integer
            run-logcat:
                default: false
                description: |
                    Whether to run with logcat in the background, after the emulator starts up
                type: boolean
            run-tests-working-directory:
                default: .
                description: Working directory to run the tests in
                type: string
            save-gradle-cache:
                default: true
                description: |
                    Whether to write to the gradle cache after the tests have run
                type: boolean
            system-image:
                default: system-images;android-29;default;x86
                description: |
                    Name of system image e.g. "system-images;android-29;default;x86".
                    It should match the name seen in the "sdkmanager --list" output.
                type: string
            test-command:
                default: ./gradlew connectedDebugAndroidTest
                description: Command to run in order to run the tests
                type: string
            verbose:
                default: true
                description: |
                    Whether to run the emulator with the -verbose flag
                type: boolean
            wait-for-emulator:
                default: true
                description: |
                    Whether to wait for the emulator to start up
                type: boolean
        steps:
            - create-avd:
                additional-args: << parameters.additional-avd-args >>
                avd-name: << parameters.avd-name >>
                install: << parameters.install-system-image >>
                system-image: <<parameters.system-image>>
            - start-emulator:
                additional-args: << parameters.additional-emulator-args >>
                avd-name: << parameters.avd-name >>
                camera-back: << parameters.camera-back >>
                camera-front: << parameters.camera-front >>
                delay-adb: << parameters.delay-adb >>
                disable-animations: << parameters.disable-animations >>
                gpu: << parameters.gpu >>
                memory: << parameters.memory >>
                no-audio: << parameters.no-audio >>
                no-boot-anim: << parameters.no-boot-anim >>
                no-snapshot: << parameters.no-snapshot >>
                no-window: << parameters.no-window >>
                override-args: << parameters.override-emulator-args >>
                post-emulator-launch-assemble-command: << parameters.post-emulator-launch-assemble-command >>
                post-emulator-wait-steps: << parameters.post-emulator-wait-steps >>
                pre-emulator-wait-steps: << parameters.pre-emulator-wait-steps >>
                restore-gradle-cache-find-args: << parameters.restore-gradle-cache-find-args >>
                restore-gradle-cache-post-emulator-launch: << parameters.restore-gradle-cache-post-emulator-launch >>
                restore-gradle-cache-prefix: << parameters.restore-gradle-cache-prefix >>
                run-logcat: << parameters.run-logcat >>
                verbose: << parameters.verbose >>
                wait-for-emulator: << parameters.wait-for-emulator >>
            - << parameters.pre-run-tests-steps >>
            - run-tests:
                max-tries: << parameters.max-tries >>
                no-output-timeout: << parameters.no-output-timeout >>
                pre-test-command: << parameters.pre-test-command >>
                retry-interval: << parameters.retry-interval >>
                test-command: << parameters.test-command >>
                working-directory: << parameters.run-tests-working-directory >>
            - << parameters.post-run-tests-steps >>
            - when:
                condition: << parameters.save-gradle-cache >>
                steps:
                    - save-gradle-cache:
                        cache-prefix: << parameters.restore-gradle-cache-prefix >>
            - when:
                condition: << parameters.kill-emulators >>
                steps:
                    - kill-emulators
    wait-for-emulator:
        description: |
            Wait for the emulator to start.
            Requires the "circle-android" script to be present in PATH.
        steps:
            - run:
                command: |
                    circle-android wait-for-boot
                name: Wait for the emulator to start
executors:
    android-docker:
        description: |
            Select a CircleCI convenience image to get building on Android.
            See https://circleci.com/developer/images/image/cimg/android#image-tags for a full list of
            the available images.
        docker:
            - image: cimg/android:<< parameters.tag >>
        parameters:
            resource-class:
                default: medium
                description: Resource class used for the executor.
                enum:
                    - small
                    - medium
                    - medium+
                    - large
                    - xlarge
                    - 2xlarge
                    - 2xlarge+
                type: enum
            tag:
                description: |
                    The Android image tag to use.
                    Choose a tag from https://circleci.com/developer/images/image/cimg/android#image-tags.
                type: string
        resource_class: << parameters.resource-class >>
    android-machine:
        description: |
            This selects an Android machine image.
            CircleCI's Android machine images are recommended for Android emulator tests.
        machine:
            image: android:<< parameters.tag >>
            resource_class: << parameters.resource-class >>
        parameters:
            resource-class:
                default: large
                description: |
                    Resource class used for the executor. It is recommended
                    to use large and above to avoid memory issues such as process
                    crashes when running emulator tests.
                enum:
                    - medium
                    - large
                    - xlarge
                    - 2xlarge
                type: enum
            tag:
                description: |
                    Name of CircleCI Android machine image to use.
                    Android machine tags can be found at https://circleci.com/developer/machine/image/android#image-tags
                type: string
jobs:
    build:
        description: |
            Start building an Android project on CircleCI
        executor: << parameters.executor >>
        parameters:
            executor:
                description: Executor for the job
                type: executor
        steps:
            - checkout
            - accept-licenses
    deploy-to-play-store:
        description: |
            Deploy an android app on CircleCI to the Google Play Store using Fastlane. For use with CirceCI Environment Variables.
        executor: << parameters.executor >>
        parameters:
            base64-keystore:
                default: BASE64_KEYSTORE
                description: Your base64 keystore
                type: env_var_name
            checkout:
                default: true
                description: Whether to run the checkout step
                type: boolean
            executor:
                description: Executor for the job
                type: executor
            fastlane-working-directory:
                default: .
                description: Working directory to run fastlane commands in
                type: string
            google-play-key:
                default: GOOGLE_PLAY_KEY
                description: Your google play key
                type: env_var_name
            keystore-location:
                default: .
                description: The location of your decrypted keystore
                type: string
            keystore-properties-working-directory:
                default: .
                description: Working directory to create keystore.properties in
                type: string
            lane-name:
                default: deploy
                description: The name of the lane fastlane will execute
                type: string
            release-key-alias:
                default: RELEASE_KEY_ALIAS
                description: Release key alias
                type: env_var_name
            release-key-password:
                default: RELEASE_KEY_PASSWORD
                description: Password for your release key
                type: env_var_name
            release-keystore:
                default: ./keystore
                description: Points to the location of your decrypted keystore
                type: string
            release-store-password:
                default: RELEASE_STORE_PASSWORD
                description: Password for your keystore
                type: env_var_name
        steps:
            - when:
                condition: << parameters.checkout >>
                steps:
                    - checkout
            - decode-keystore:
                base64-keystore: << parameters.base64-keystore >>
                keystore-location: << parameters.keystore-location >>
            - create-keystore-properties:
                release-key-alias: << parameters.release-key-alias >>
                release-key-password: << parameters.release-key-password >>
                release-keystore: << parameters.release-keystore >>
                release-store-password: << parameters.release-store-password >>
                working-directory: << parameters.keystore-properties-working-directory >>
            - create-google-play-key:
                google-play-key: << parameters.google-play-key >>
            - fastlane-deploy:
                lane-name: << parameters.lane-name >>
                working-directory: << parameters.fastlane-working-directory >>
    run-ui-tests:
        description: |
            Creates an AVD, starts an emulator and runs Android UI tests.
            This is a job that wraps the "start-emulator-and-run-tests" command.
        executor: << parameters.executor >>
        parameters:
            additional-avd-args:
                default: ""
                description: |
                    Additional args to be passed directly to the avd creation command
                type: string
            additional-emulator-args:
                default: ""
                description: |
                    Additional args to be passed directly to the emulator command
                type: string
            avd-name:
                default: test
                description: |
                    The name of the AVD to create
                type: string
            camera-back:
                default: ""
                description: |
                    The value to use for the "-camera-back" flag.
                    If set to "", the emulator will be run without the -camera-back flag.
                type: string
            camera-front:
                default: ""
                description: |
                    The value to use for the "-camera-front" flag.
                    If set to "", the emulator will be run without the -camera-front flag.
                type: string
            checkout:
                default: true
                description: Whether to run the checkout step
                type: boolean
            delay-adb:
                default: false
                description: |
                    Whether to run the emulator with the -delay-adb flag
                type: boolean
            disable-animations:
                default: true
                description: |
                    Whether to disable animations that may interfere with tests, after the emulator starts up
                type: boolean
            executor:
                description: Executor for the job
                type: executor
            gpu:
                default: swiftshader_indirect
                description: |
                    The value to use for the "-gpu" flag.
                    If set to "", the emulator will be run without the -gpu flag.
                type: string
            install-system-image:
                default: true
                description: |
                    Whether to first install the system image via sdkmanager
                type: boolean
            kill-emulators:
                default: true
                description: |
                    Whether to kill the emulators after the tests complete
                type: boolean
            max-tries:
                default: 2
                description: Max number of tries. To disable retries, set this to 1.
                type: integer
            memory:
                default: -1
                description: |
                    The value to use for the "-memory" flag.
                    If set to -1, the emulator will be run without the -memory flag.
                type: integer
            no-audio:
                default: true
                description: |
                    Whether to run the emulator with the -noaudio flag
                type: boolean
            no-boot-anim:
                default: true
                description: |
                    Whether to run the emulator with the -no-boot-anim flag
                type: boolean
            no-output-timeout:
                default: 10m
                description: |
                    Use this to configure the no_output_timeout value of the test run
                type: string
            no-snapshot:
                default: true
                description: |
                    Whether to run the emulator with the -no-snapshot flag
                type: boolean
            no-window:
                default: true
                description: |
                    Whether to run the emulator with the -no-window flag
                type: boolean
            override-emulator-args:
                default: ""
                description: |
                    If this is set to a non-blank value, the emulator command will be
                    run with the -avd flag and the value of "override-args" (i.e. none of the defaults
                    provided by the orb command will be used)
                type: string
            post-emulator-launch-assemble-command:
                default: ./gradlew assembleDebugAndroidTest
                description: |
                    If this is set to a non-blank value, the configured command will be run
                    after the emulator has been launched, and before commencing the
                    wait for the emulator to finish starting up.
                type: string
            post-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute after waiting for the emulator to start up
                type: steps
            post-run-tests-steps:
                default: []
                description: |
                    Steps to run after the tests
                type: steps
            pre-emulator-wait-steps:
                default: []
                description: |
                    Steps to execute while before beginning to wait for the emulator to start up
                type: steps
            pre-run-tests-steps:
                default: []
                description: |
                    Steps to run before the tests
                type: steps
            pre-test-command:
                default: ' '
                description: Command to run prior to runnning the test command
                type: string
            restore-gradle-cache-find-args:
                default: . -name "build.gradle*" -o -name "settings.gradle*"
                description: |
                    Use this to customize how the find command is used to look for relevant
                    file changes.
                type: string
            restore-gradle-cache-post-emulator-launch:
                default: true
                description: |
                    Whether to restore the gradle cache after the emulator has been launched,
                    and before commencing the wait for the emulator to finish starting up.
                type: boolean
            restore-gradle-cache-prefix:
                default: v1
                description: |
                    Cache prefix used if the "restore-gradle-cache-post-emulator-launch" parameter
                    is set to true.
                type: string
            retry-interval:
                default: 5
                description: Duration in seconds to wait before the next try
                type: integer
            run-logcat:
                default: false
                description: |
                    Whether to run with logcat in the background, after the emulator starts up
                type: boolean
            run-tests-working-directory:
                default: .
                description: Working directory to run the tests in
                type: string
            save-gradle-cache:
                default: true
                description: |
                    Whether to write to the gradle cache after the tests have run
                type: boolean
            system-image:
                default: system-images;android-29;default;x86
                description: |
                    Name of system image e.g. "system-images;android-29;default;x86".
                    It should match the name seen in the "sdkmanager --list" output.
                type: string
            test-command:
                default: ./gradlew connectedDebugAndroidTest
                description: Command to run in order to run the tests
                type: string
            verbose:
                default: true
                description: |
                    Whether to run the emulator with the -verbose flag
                type: boolean
            wait-for-emulator:
                default: true
                description: |
                    Whether to wait for the emulator to start up
                type: boolean
        steps:
            - when:
                condition: << parameters.checkout >>
                steps:
                    - checkout
            - start-emulator-and-run-tests:
                additional-avd-args: << parameters.additional-avd-args >>
                additional-emulator-args: << parameters.additional-emulator-args >>
                avd-name: << parameters.avd-name >>
                camera-back: << parameters.camera-back >>
                camera-front: << parameters.camera-front >>
                delay-adb: << parameters.delay-adb >>
                disable-animations: << parameters.disable-animations >>
                gpu: << parameters.gpu >>
                install-system-image: << parameters.install-system-image >>
                kill-emulators: << parameters.kill-emulators >>
                max-tries: << parameters.max-tries >>
                memory: << parameters.memory >>
                no-audio: << parameters.no-audio >>
                no-boot-anim: << parameters.no-boot-anim >>
                no-output-timeout: << parameters.no-output-timeout >>
                no-snapshot: << parameters.no-snapshot >>
                no-window: << parameters.no-window >>
                override-emulator-args: << parameters.override-emulator-args >>
                post-emulator-launch-assemble-command: << parameters.post-emulator-launch-assemble-command >>
                post-emulator-wait-steps: << parameters.post-emulator-wait-steps >>
                post-run-tests-steps: << parameters.post-run-tests-steps >>
                pre-emulator-wait-steps: << parameters.pre-emulator-wait-steps >>
                pre-run-tests-steps: << parameters.pre-run-tests-steps >>
                pre-test-command: << parameters.pre-test-command >>
                restore-gradle-cache-find-args: << parameters.restore-gradle-cache-find-args >>
                restore-gradle-cache-post-emulator-launch: << parameters.restore-gradle-cache-post-emulator-launch >>
                restore-gradle-cache-prefix: << parameters.restore-gradle-cache-prefix >>
                retry-interval: << parameters.retry-interval >>
                run-logcat: << parameters.run-logcat >>
                run-tests-working-directory: << parameters.run-tests-working-directory >>
                save-gradle-cache: << parameters.save-gradle-cache >>
                system-image: <<parameters.system-image>>
                test-command: << parameters.test-command >>
                verbose: << parameters.verbose >>
                wait-for-emulator: << parameters.wait-for-emulator >>
examples:
    granular-commands:
        description: |
            An example of using the more granular commands of the orb together,
            to achieve something similar to using the "start-emulator-and-run-tests" command
            or the "run-ui-tests" job.
        usage:
            version: "2.1"
            orbs:
                android: circleci/android@2.0
            jobs:
                test:
                    executor:
                        name: android/android-machine
                        resource-class: large
                        tag: 2021.10.1
                    steps:
                        - checkout
                        - android/create-avd:
                            avd-name: myavd
                            install: true
                            system-image: system-images;android-29;default;x86
                        - android/start-emulator:
                            avd-name: myavd
                            no-window: true
                            restore-gradle-cache-prefix: v1a
                        - android/run-tests
                        - android/save-gradle-cache:
                            cache-prefix: v1a
            workflows:
                test:
                    jobs:
                        - test
    override-machine-resource-class:
        description: |
            An example of overriding the android-machine executor's default resource class
        usage:
            version: "2.1"
            orbs:
                android: circleci/android@2.0
            workflows:
                test:
                    jobs:
                        - android/run-ui-tests:
                            executor:
                                name: android/android-machine
                                resource-class: xlarge
    run-ui-tests-job:
        description: |
            A simple example of using the run-ui-tests job,
            using most of the default parameters.
            Parameters like the system-image and emulator options (e.g. "no-window")
            may need to be adjusted from the defaults, according to your project.
        usage:
            version: "2.1"
            orbs:
                android: circleci/android@2.0
            workflows:
                test:
                    jobs:
                        - android/run-ui-tests:
                            system-image: system-images;android-28;default;x86
    start-emulator-and-run-tests:
        description: |
            A simple example of using the start-emulator-and-run-tests command
            in a job, using most of the default parameters.
            Parameters like the system-image and emulator options (e.g. "no-window")
            may need to be adjusted from the defaults, according to your project.
        usage:
            version: "2.1"
            orbs:
                android: circleci/android@2.0
            jobs:
                test:
                    executor:
                        name: android/android-machine
                        resource-class: large
                    steps:
                        - checkout
                        - android/start-emulator-and-run-tests:
                            system-image: system-images;android-29;default;x86
            workflows:
                test:
                    jobs:
                        - test
    test-matrix:
        description: |
            A simple example of using a test matrix to test on different
            emulators.
        usage:
            version: "2.1"
            orbs:
                android: circleci/android@2.0
            workflows:
                test:
                    jobs:
                        - android/run-ui-tests:
                            matrix:
                                parameters:
                                    system-image:
                                        - system-images;android-28;default;x86
                                        - system-images;android-29;default;x86
                            name: ui-tests-<<matrix.system-image>>